{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daddy\\\\Comp6210_SCP_Assignment_2-3\\\\client\\\\src\\\\components\\\\scp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScpRecord() {\n  _s();\n\n  const [records, setRecords] = useState({\n    item: \"\",\n    name: \"\",\n    objectclass: \"\",\n    image: \"\",\n    description: \"\",\n    containment: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      if (response.ok) {\n        const records = await response.json();\n        setRecords(records);\n        console.log(records);\n      }\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate, records.length]);\n\n  function scpRecord() {\n    return records.map(scp => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card bg-dark text-light\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/scp/${scp._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: scp.image,\n                className: \"card-img-top p-1\",\n                alt: \"scp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: scp.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: [\"Item #: \", scp.item]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Objectclass: \", scp.objectclass]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Description:\", \" \", scp.description.length > 250 ? `${scp.description.substring(0, 200)}...` : scp.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/scp/${scp._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"text-light btn btn-primary btn-outline-secondary\",\n                  children: \"More info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, scp._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SCP Catalog List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: scpRecord()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScpRecord, \"g3MBoCZH7+AVvZld2keBkSO5tg4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScpRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScpRecord\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","ScpRecord","records","setRecords","item","name","objectclass","image","description","containment","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","console","log","length","scpRecord","map","scp","_id","substring"],"sources":["C:/Users/daddy/Comp6210_SCP_Assignment_2-3/client/src/components/scp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ScpRecord() {\r\n  const [records, setRecords] = useState({\r\n    item: \"\",\r\n    name: \"\",\r\n    objectclass: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n    containment: \"\",\r\n\r\n    records: [],\r\n  });\r\n\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(\r\n        `http://localhost:5000/record/${params.id.toString()}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      if (response.ok) {\r\n        const records = await response.json();\r\n        setRecords(records);\r\n        console.log(records);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return;\r\n  }, [params.id, navigate, records.length]);\r\n\r\n  function scpRecord() {\r\n    return records.map((scp) => {\r\n      return (\r\n        <div className=\"col-6\">\r\n          <div key={scp._id} className=\"mb-2\">\r\n            <div className=\"card bg-dark text-light\">\r\n              <Link to={`/scp/${scp._id}`}>\r\n                <img src={scp.image} className=\"card-img-top p-1\" alt=\"scp\" />\r\n              </Link>\r\n              <hr />\r\n              <div className=\"card-body p-2\">\r\n                <h4 className=\"card-title\">{scp.name}</h4>\r\n                <p className=\"card-title\">Item #: {scp.item}</p>\r\n                <p className=\"card-text\">Objectclass: {scp.objectclass}</p>\r\n                <hr />\r\n                <p className=\"card-text\">\r\n                  Description:{\" \"}\r\n                  {scp.description.length > 250\r\n                    ? `${scp.description.substring(0, 200)}...`\r\n                    : scp.description}\r\n                </p>\r\n                <Link to={`/scp/${scp._id}`}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-light btn btn-primary btn-outline-secondary\">\r\n                    More info\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div className=\"container text-light\">\r\n      <h3>SCP Catalog List</h3>\r\n      <div className=\"row\">{scpRecord()}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,cAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;IACrCO,IAAI,EAAE,EAD+B;IAErCC,IAAI,EAAE,EAF+B;IAGrCC,WAAW,EAAE,EAHwB;IAIrCC,KAAK,EAAE,EAJ8B;IAKrCC,WAAW,EAAE,EALwB;IAMrCC,WAAW,EAAE,EANwB;IAQrCP,OAAO,EAAE;EAR4B,CAAD,CAAtC;EAWA,MAAMQ,MAAM,GAAGZ,SAAS,EAAxB;EACA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B;EAEAH,SAAS,CAAC,MAAM;IACd,eAAegB,SAAf,GAA2B;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAX;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,gCAA+BN,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAqB,EAD3B,CAA5B;;MAIA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAMC,OAAO,GAAI,0BAAyBH,QAAQ,CAACI,UAAW,EAA9D;QACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;QACA;MACD;;MAED,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB;;MACA,IAAI,CAACD,MAAL,EAAa;QACXF,MAAM,CAACC,KAAP,CAAc,kBAAiBR,EAAG,YAAlC;QACAF,QAAQ,CAAC,GAAD,CAAR;QACA;MACD;;MAED,IAAII,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAMf,OAAO,GAAG,MAAMa,QAAQ,CAACQ,IAAT,EAAtB;QACApB,UAAU,CAACD,OAAD,CAAV;QACAsB,OAAO,CAACC,GAAR,CAAYvB,OAAZ;MACD;IACF;;IAEDU,SAAS;IAET;EACD,CA9BQ,EA8BN,CAACF,MAAM,CAACG,EAAR,EAAYF,QAAZ,EAAsBT,OAAO,CAACwB,MAA9B,CA9BM,CAAT;;EAgCA,SAASC,SAAT,GAAqB;IACnB,OAAOzB,OAAO,CAAC0B,GAAR,CAAaC,GAAD,IAAS;MAC1B,oBACE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE;UAAmB,SAAS,EAAC,MAA7B;UAAA,uBACE;YAAK,SAAS,EAAC,yBAAf;YAAA,wBACE,QAAC,IAAD;cAAM,EAAE,EAAG,QAAOA,GAAG,CAACC,GAAI,EAA1B;cAAA,uBACE;gBAAK,GAAG,EAAED,GAAG,CAACtB,KAAd;gBAAqB,SAAS,EAAC,kBAA/B;gBAAkD,GAAG,EAAC;cAAtD;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAK,SAAS,EAAC,eAAf;cAAA,wBACE;gBAAI,SAAS,EAAC,YAAd;gBAAA,UAA4BsB,GAAG,CAACxB;cAAhC;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAG,SAAS,EAAC,YAAb;gBAAA,uBAAmCwB,GAAG,CAACzB,IAAvC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE;gBAAG,SAAS,EAAC,WAAb;gBAAA,4BAAuCyB,GAAG,CAACvB,WAA3C;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAIE;gBAAA;gBAAA;gBAAA;cAAA,QAJF,eAKE;gBAAG,SAAS,EAAC,WAAb;gBAAA,2BACe,GADf,EAEGuB,GAAG,CAACrB,WAAJ,CAAgBkB,MAAhB,GAAyB,GAAzB,GACI,GAAEG,GAAG,CAACrB,WAAJ,CAAgBuB,SAAhB,CAA0B,CAA1B,EAA6B,GAA7B,CAAkC,KADxC,GAEGF,GAAG,CAACrB,WAJV;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QALF,eAWE,QAAC,IAAD;gBAAM,EAAE,EAAG,QAAOqB,GAAG,CAACC,GAAI,EAA1B;gBAAA,uBACE;kBACE,IAAI,EAAC,QADP;kBAEE,SAAS,EAAC,kDAFZ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAXF;YAAA;cAAA;cAAA;cAAA;YAAA,QALF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF,GAAUD,GAAG,CAACC,GAAd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IA+BD,CAhCM,CAAP;EAiCD,CAjFiC,CAmFlC;;;EACA,oBACE;IAAK,SAAS,EAAC,sBAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,KAAf;MAAA,UAAsBH,SAAS;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA1FuB1B,S;UAYPH,S,EACEC,W;;;KAbKE,S"},"metadata":{},"sourceType":"module"}