{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daddy\\\\Comp6210_SCP_Assignment_2-3\\\\client\\\\src\\\\components\\\\recordList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // const Record = (props) => (\n//   <div>\n//     <p>{props.record.item}</p>\n//     <p>{props.record.name}</p>\n//     <p>{props.record.objectclass}</p>\n//     <p>{props.record.image}</p>\n//     <p>{props.record.description}</p>\n//     <p>{props.record.containment}</p>\n//     <p>\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\n//         Edit\n//       </Link>{\" \"}\n//       |\n//       <button\n//         className=\"btn btn-link\"\n//         onClick={() => {\n//           props.deleteRecord(props.record._id);\n//         }}>\n//         Delete\n//       </button>\n//     </p>\n//   </div>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecordList() {\n  _s();\n\n  const [records, setRecords] = useState([]); // This method fetches the records from the database.\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  } // This method will map out the records on the table\n\n\n  function recordList() {\n    return records.map(scp => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card bg-dark text-light\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/scp/${scp._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: scp.image,\n                className: \"card-img-top p-1\",\n                alt: \"scp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: scp.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: [\"Item #: \", scp.item]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Objectclass: \", scp.objectclass]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Description:\", \" \", scp.description.length > 250 ? `${scp.description.substring(0, 200)}...` : scp.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/scp/${scp._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"text-light btn btn-primary btn-outline-secondary\",\n                  children: \"More info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, scp._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SCP Catalog List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: recordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c = RecordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","deleteRecord","id","method","newRecords","filter","el","_id","recordList","map","scp","image","name","item","objectclass","description","substring"],"sources":["C:/Users/daddy/Comp6210_SCP_Assignment_2-3/client/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// const Record = (props) => (\r\n//   <div>\r\n//     <p>{props.record.item}</p>\r\n//     <p>{props.record.name}</p>\r\n//     <p>{props.record.objectclass}</p>\r\n//     <p>{props.record.image}</p>\r\n//     <p>{props.record.description}</p>\r\n//     <p>{props.record.containment}</p>\r\n//     <p>\r\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\r\n//         Edit\r\n//       </Link>{\" \"}\r\n//       |\r\n//       <button\r\n//         className=\"btn btn-link\"\r\n//         onClick={() => {\r\n//           props.deleteRecord(props.record._id);\r\n//         }}>\r\n//         Delete\r\n//       </button>\r\n//     </p>\r\n//   </div>\r\n// );\r\n\r\nexport default function RecordList() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    getRecords();\r\n\r\n    return;\r\n  }, [records.length]);\r\n\r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    await fetch(`http://localhost:5000/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n    setRecords(newRecords);\r\n  }\r\n\r\n  // This method will map out the records on the table\r\n  function recordList() {\r\n    return records.map((scp) => {\r\n      return (\r\n        <div key={scp._id} className=\"col-6\">\r\n          <div className=\"mb-2\">\r\n            <div className=\"card bg-dark text-light\">\r\n              <Link to={`/scp/${scp._id}`}>\r\n                <img src={scp.image} className=\"card-img-top p-1\" alt=\"scp\" />\r\n              </Link>\r\n              <hr />\r\n              <div className=\"card-body p-2\">\r\n                <h4 className=\"card-title\">{scp.name}</h4>\r\n                <p className=\"card-title\">Item #: {scp.item}</p>\r\n                <p className=\"card-text\">Objectclass: {scp.objectclass}</p>\r\n                <hr />\r\n                <p className=\"card-text\">\r\n                  Description:{\" \"}\r\n                  {scp.description.length > 250\r\n                    ? `${scp.description.substring(0, 200)}...`\r\n                    : scp.description}\r\n                </p>\r\n                <Link to={`/scp/${scp._id}`}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-light btn btn-primary btn-outline-secondary\">\r\n                    More info\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  // This following section will display the table with the records of individuals.\r\n  return (\r\n    <div className=\"container text-light\">\r\n      <h3>SCP Catalog List</h3>\r\n      <div className=\"row\">{recordList()}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}