{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nexport default function ScpRecord() {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      console.log(Object.keys(response));\n      const result = Object.keys(response).map(key => {\n        console.log(key);\n        console.log(response[key]);\n        return {\n          [key]: response[key]\n        };\n      });\n      console.log(result); //   const record = await response.json();\n      //   if (!record) {\n      //     window.alert(`Record with id ${id} not found`);\n      //     navigate(\"/\");\n      //     return;\n      //   }\n\n      const records = await response.json();\n\n      if (response.ok) {\n        setRecords(records); //console.log(records);\n      }\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate, records.length]); //   function scpRecord() {\n  //     return records.map((scp) => {\n  //       return (\n  //         <div className=\"col-6\">\n  //           <div key={scp._id} className=\"mb-2\">\n  //             <div className=\"card bg-dark text-light\">\n  //               <Link to={`/scp/${scp._id}`}>\n  //                 <img src={scp.image} className=\"card-img-top p-1\" alt=\"scp\" />\n  //               </Link>\n  //               <hr />\n  //               <div className=\"card-body p-2\">\n  //                 <h4 className=\"card-title\">{scp.name}</h4>\n  //                 <p className=\"card-title\">Item #: {scp.item}</p>\n  //                 <p className=\"card-text\">Objectclass: {scp.objectclass}</p>\n  //                 <hr />\n  //                 <p className=\"card-text\">\n  //                   Description:{\" \"}\n  //                   {scp.description.length > 250\n  //                     ? `${scp.description.substring(0, 200)}...`\n  //                     : scp.description}\n  //                 </p>\n  //                 <Link to={`/scp/${scp._id}`}>\n  //                   <button\n  //                     type=\"button\"\n  //                     className=\"text-light btn btn-primary btn-outline-secondary\">\n  //                     More info\n  //                   </button>\n  //                 </Link>\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       );\n  //     });\n  //   }\n  //   // This following section will display the table with the records of individuals.\n  //   return (\n  //     <div className=\"container text-light\">\n  //       <h3>SCP Catalog List</h3>\n  //       <div className=\"row\">{scpRecord()}</div>\n  //     </div>\n  //   );\n}\n\n_s(ScpRecord, \"ro7FnrHjzz0YHKi3ftXTCRckclE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ScpRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScpRecord\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","ScpRecord","records","setRecords","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","console","log","Object","keys","result","map","key","json","length"],"sources":["C:/Users/daddy/Comp6210_SCP_Assignment_2-3/client/src/components/scp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ScpRecord() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(\r\n        `http://localhost:5000/record/${params.id.toString()}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      console.log(Object.keys(response));\r\n\r\n      const result = Object.keys(response).map((key) => {\r\n        console.log(key);\r\n        console.log(response[key]);\r\n\r\n        return { [key]: response[key] };\r\n      });\r\n\r\n      console.log(result);\r\n\r\n      //   const record = await response.json();\r\n      //   if (!record) {\r\n      //     window.alert(`Record with id ${id} not found`);\r\n      //     navigate(\"/\");\r\n      //     return;\r\n      //   }\r\n\r\n      const records = await response.json();\r\n      if (response.ok) {\r\n        setRecords(records);\r\n        //console.log(records);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return;\r\n  }, [params.id, navigate, records.length]);\r\n\r\n  //   function scpRecord() {\r\n  //     return records.map((scp) => {\r\n  //       return (\r\n  //         <div className=\"col-6\">\r\n  //           <div key={scp._id} className=\"mb-2\">\r\n  //             <div className=\"card bg-dark text-light\">\r\n  //               <Link to={`/scp/${scp._id}`}>\r\n  //                 <img src={scp.image} className=\"card-img-top p-1\" alt=\"scp\" />\r\n  //               </Link>\r\n  //               <hr />\r\n  //               <div className=\"card-body p-2\">\r\n  //                 <h4 className=\"card-title\">{scp.name}</h4>\r\n  //                 <p className=\"card-title\">Item #: {scp.item}</p>\r\n  //                 <p className=\"card-text\">Objectclass: {scp.objectclass}</p>\r\n  //                 <hr />\r\n  //                 <p className=\"card-text\">\r\n  //                   Description:{\" \"}\r\n  //                   {scp.description.length > 250\r\n  //                     ? `${scp.description.substring(0, 200)}...`\r\n  //                     : scp.description}\r\n  //                 </p>\r\n  //                 <Link to={`/scp/${scp._id}`}>\r\n  //                   <button\r\n  //                     type=\"button\"\r\n  //                     className=\"text-light btn btn-primary btn-outline-secondary\">\r\n  //                     More info\r\n  //                   </button>\r\n  //                 </Link>\r\n  //               </div>\r\n  //             </div>\r\n  //           </div>\r\n  //         </div>\r\n  //       );\r\n  //     });\r\n  //   }\r\n\r\n  //   // This following section will display the table with the records of individuals.\r\n  //   return (\r\n  //     <div className=\"container text-light\">\r\n  //       <h3>SCP Catalog List</h3>\r\n  //       <div className=\"row\">{scpRecord()}</div>\r\n  //     </div>\r\n  //   );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,cAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAMO,MAAM,GAAGN,SAAS,EAAxB;EACA,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;EAEAH,SAAS,CAAC,MAAM;IACd,eAAeU,SAAf,GAA2B;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAX;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,gCAA+BN,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAqB,EAD3B,CAA5B;;MAIA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAMC,OAAO,GAAI,0BAAyBH,QAAQ,CAACI,UAAW,EAA9D;QACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;QACA;MACD;;MAEDI,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYV,QAAZ,CAAZ;MAEA,MAAMW,MAAM,GAAGF,MAAM,CAACC,IAAP,CAAYV,QAAZ,EAAsBY,GAAtB,CAA2BC,GAAD,IAAS;QAChDN,OAAO,CAACC,GAAR,CAAYK,GAAZ;QACAN,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACa,GAAD,CAApB;QAEA,OAAO;UAAE,CAACA,GAAD,GAAOb,QAAQ,CAACa,GAAD;QAAjB,CAAP;MACD,CALc,CAAf;MAOAN,OAAO,CAACC,GAAR,CAAYG,MAAZ,EArByB,CAuBzB;MACA;MACA;MACA;MACA;MACA;;MAEA,MAAMlB,OAAO,GAAG,MAAMO,QAAQ,CAACc,IAAT,EAAtB;;MACA,IAAId,QAAQ,CAACE,EAAb,EAAiB;QACfR,UAAU,CAACD,OAAD,CAAV,CADe,CAEf;MACD;IACF;;IAEDI,SAAS;IAET;EACD,CAzCQ,EAyCN,CAACF,MAAM,CAACG,EAAR,EAAYF,QAAZ,EAAsBH,OAAO,CAACsB,MAA9B,CAzCM,CAAT,CANkC,CAiDlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;;GA5FuBvB,S;UAGPH,S,EACEC,W;;;KAJKE,S"},"metadata":{},"sourceType":"module"}